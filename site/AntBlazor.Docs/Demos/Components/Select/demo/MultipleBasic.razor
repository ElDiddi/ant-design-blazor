<Select Mode="multiple" 
        DataSource="@_persons"
        @bind-Values="@_selectedValues"
        LabelName="@nameof(Person.Name)"
        ValueName="@nameof(Person.Id)"
        DisabledName="@nameof(Person.NotAvailable)"
        Placeholder="Select multiple persons"
        OnSelectedItemsChanged="@(items => OnOnSelectedItemsChangedEventHandler(items))"
        AllowClear
        EnableSearch>
</Select>
<br /><br />
<p>
    Selected Items Values Count: @_selectedValues?.Count() <br />
    Selected Items Count: @_selectedItems?.Count()
</p>

@code
{
    class Person
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public bool NotAvailable { get; set; }
    }

    List<Person> _persons;
    IEnumerable<int> _selectedValues;
    IEnumerable<Person> _selectedItems;

    protected override void OnInitialized()
    {
        _persons = new List<Person> 
        {
            new Person {Id = 1, Name = "Jack"}, 
            new Person {Id = 2, Name = "Lucy"}, 
            new Person {Id = 3, Name = "Yaoming"}, 
            new Person {Id = 4, Name = "Frieda"}, 
            new Person {Id = 5, Name = "Kathy", NotAvailable = true}, 
            new Person {Id = 6, Name = "Kate"}, 
            new Person {Id = 7, Name = "Eric"}, 
            new Person {Id = 8, Name = "Jake", NotAvailable = true}, 
            new Person {Id = 9, Name = "Olaf"}, 
            new Person {Id = 10, Name = "Sven"}, 
            new Person {Id = 11, Name = "Bernd", NotAvailable = true}, 
            new Person {Id = 12, Name = "Jane"}, 
            new Person {Id = 13, Name = "John"}};
    }

    private void OnOnSelectedItemsChangedEventHandler(IEnumerable<Person> value)
    {
        _selectedItems = value;
    }
}
